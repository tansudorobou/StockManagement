/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/weatherforecast": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetWeatherForecast"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inventories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetInventories"];
        put?: never;
        post: operations["AddInventory"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inouts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetInOuts"];
        put?: never;
        post: operations["AddInOut"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Classification: {
            item: string;
            asset: string;
        } | null;
        InOut: {
            itemMaster?: components["schemas"]["ItemMaster"];
            classification?: components["schemas"]["Classification"];
            name?: string | null;
            /** Format: int32 */
            qty?: number;
            /** Format: int32 */
            unitPrice?: number;
            lotNo?: string | null;
            /** Format: date-time */
            dateTime?: string;
            /** Format: uuid */
            id?: string;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            updatedAt?: string;
        };
        Inventory: {
            itemMaster?: components["schemas"]["ItemMaster"];
            lotNo?: string | null;
            /** Format: int32 */
            qty?: number;
            /** Format: int32 */
            price?: number;
            /** Format: int32 */
            usedCount?: number;
            /** Format: uuid */
            id?: string;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            updatedAt?: string;
        };
        ItemMaster: {
            itemCode?: string | null;
            itemName?: string | null;
            classification?: components["schemas"]["Classification"];
            /** Format: int32 */
            unitPrice?: number;
            /** Format: uuid */
            id?: string;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            updatedAt?: string;
        } | null;
        WeatherForecast: {
            /** Format: date */
            date: string;
            /** Format: int32 */
            temperatureC: number;
            summary: string | null;
            /** Format: int32 */
            temperatureF?: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    GetWeatherForecast: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WeatherForecast"][];
                };
            };
        };
    };
    GetInventories: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Inventory"][];
                };
            };
        };
    };
    AddInventory: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Inventory"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    GetInOuts: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InOut"][];
                };
            };
        };
    };
    AddInOut: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InOut"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
